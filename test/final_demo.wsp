int TEX_TEMP = 10
int TEX_METAL = 11
int SCR_BLUR = 12
int PTC_STAR = 7
int PTC_XS = 8

double _2_5MPI = M_PI*2.0/5.0
double _4_MPI  = M_PI*4.0 

screen(0,"WSP demo",1600,900)
ScreenPos(0,0,30)
HideMouse()
cls(0,0,0)

mmload("test/audio/vijore.mp3",1)

//色々初期化
mkparticle(1,255,255,255)
mkparticle(2,255,255,100)
mkparticle(3,255,100,100)
mkparticle(4,127,255,127)
mkparticle(5,127,255,255)
mkparticle(6,100,127,255)

LoadImage("test/image/star.png",1)
ldparticle(PTC_STAR,1)

//X
int arr[6] = [4,  4,  30, 30, 150, 30]
mkparticle(8,  200, 200, 400,  arr)

//WSP
int tc = 124
int tx[tc] = [20,14,13,7,2,1,0,-1,-2,-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,20,14,13,7,3,-4,-10,-19,19,14,13,8,4,-5,-10,-20,19,15,12,8,4,-10,-20,19,15,12,8,4,-10,-20,19,15,12,8,3,2,-10,-20,19,15,12,8,2,1,0,-10,-19,18,16,11,9,-1,-2,-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,18,16,11,9,-3,-4,-10,18,16,11,9,4,-5,-10,18,16,11,9,4,-5,-10,18,16,11,9,4,-5,-10,17,10,3,-4,-10,17,10,2,1,0,-1,-2,-3,-10]
int ty[tc] = [7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-2,-2,-2,-2,-2,-2,-2,-3,-3,-3,-3,-3,-3,-3,-4,-4,-4,-4,-4,-4,-4,-5,-5,-5,-5,-5,-6,-6,-6,-6,-6,-6,-6,-6,-6]

//メタルテクスチャ
screen(TEX_TEMP,"",64,1024,16)
repeat(64){
	hsvcolor(0,0,(1.0 - sin(M_PI * cnt / 63)) * 240)
	line(cnt,0,cnt,1024)
}
screen(TEX_METAL,"",64,1024,16)
repeat(1024){
	hsvcolor(cnt / 4, 128, 128 + rnd(64))
	line(0,cnt,64,cnt)
}
gmode(4)
gcopy(TEX_TEMP)

screen(SCR_BLUR,"",1600,900,16)
gsel(0)

double bpm = 144.0
int st_pos = 666
int time_offset = gettime()-st_pos
int ms
double c
int pmode

double cb1,cb2,cb4,cb8,cb16,cb32,cb1s,cb2s,cb4s,cb8s,cb16s,cb32s
double xb1,xb2,xb4,xb8,xb16,xb32,xb1s,xb2s,xb4s,xb8s,xb16s,xb32s
int bcnt

//初期化完了！！
mmplay(1)
while(true){
	if (getkey("ESC"))end()
	
	ms = gettime()-time_offset
	double fbt = bpm*ms/60000-4
	int ibt = int(fbt)
	if (fbt < 0){
		await()
		continue
	}
	
	// cbN : N beat count-up (0.0 -> 1.0)
	
	cb2  = (fbt - (ibt /  2 *  2)) /  2
	cb4  = (fbt - (ibt /  4 *  4)) /  4
	cb8  = (fbt - (ibt /  8 *  8)) /  8
	cb32 = (fbt - (ibt / 32 * 32)) / 32

	cb2s  = cb2  * cb2
	cb4s  = cb4  * cb4
	cb8s  = cb8  * cb8
	cb32s = cb32 * cb32

	// xbN : N beat count-down (1.0 -> 0.0)

	xb2  = 1.0 - cb2
	xb4  = 1.0 - cb4
	xb8  = 1.0 - cb8
	xb32 = 1.0 - cb32

	xb2s  = xb2  * xb2
	xb4s  = xb4  * xb4
	xb8s  = xb8  * xb8
	xb32s = xb32 * xb32
	
	bcnt = ibt%32
	
	
	redraw(0)
	randomize(0)
	fps = getfps()
	title(fps)
	pmode = 0
	
	c = 32.0 + cos(cb32 * 12.56637) * 16
	if (bcnt <  8 )  c += xb8s * 160
	if (bcnt >= 24)  c += cb8s * 128
	
	int fase = ibt/32
	if (fase == 0){
		//galaxy
		galaxy()
	}else if (fase == 1){
		//TSUBAME
		
	}else if (fase == 2){
		//WSP
		
	}
	
	redraw(1)
	await(16)
}

void galaxy(){
	double cc
	if bcnt >= 28 {
		cc = cb4s * 5 + 1
	} else if bcnt >= 8 {
		cc = 1.0
	} else {
		cc = cb8
	}
	cc += sin(cb32 * 12.56637) / 8
	Set3DCamera(0, 700 + xb32 * 2000, 600)
	
	c = cc*16
	cls(limit(c, 0, 255), limit(1.2 * c, 0, 255), limit(1.4 * c, 0, 255))
	gmode(2)
	// stars
	int alpha1 = cc*224
	int alpha2 = cc*64
	repeat(800){
		double z = limit( rnd(5000) - cb32s * 2000 - 2800, 0, 59999)
		double r = rnd(600)
		double f = _2_5MPI * cnt+r / 200.0 + 0.002 * rnd(32768) / (r + 100) - cb32
		
		double a = double( rnd(5000) ) / (r + 100)
		if rnd(2){
			z += a
		}else{
			z -= a
		}
		
		color(255,255,255,alpha1)
		particle(1,  cos(f) * r, sin(f) * r, z,  15 * (600 - r) / 600 + 2)
		
		if rnd(4) == 0 {
			color(255,255,255,alpha2)
			particlem(6, 45 * (600 - r) / 600 + 5)
		}
		
		if rnd(8) == 0 {
			a = sin(cb32*_4_MPI + cnt*cnt)
			color(255,255,255, a * limit( alpha2, 0, 64 ))
			particlem(PTC_XS, a * 90)
		}//*/
	}//*/
	//X
	color(255,255,255,alpha2)
	particle   (6,  0, 0, 0,  500)
	particlem  (3,  300)
	particlemr (PTC_STAR, cb2s*(bcnt>=30)*200 + 200, -cb32)
	particlemr (PTC_STAR,                       200,  cb32 * 3)
	//
	repeat(200){
		color(255,255,255,alpha1)
		particle(1,  rnd(4000)-2000, -rnd(4000), rnd(4000)-2000,  7)
		if rnd(3) == 0 {
			color(255,255,255,alpha2)
			particlem(6, 30)
		}
	}
	
	// フレア
	if bcnt >= 28 {
		Set3DCamera(2)
		repeat(50){
			r = (1.0 - (0.001 * rnd(rnd(1000) + 1))) * cb4 * 0.7 + 0.1
			f = cb32 + rnd(32768)
			color(255,255,255,cb4s * 224)
			particle(1, 0, sin(f) * r, cos(f) * r, 0.02)

			if rnd(3) == 0 {
				color(255,255,255,cb4s * 64)
				particlem (6, 0.10)
			}
		}
	}
	Reset3D()
	color(0,0,0)
	rect(0,0,1600,112.5)
	rect(0,787.5,1600,112.5)
}

